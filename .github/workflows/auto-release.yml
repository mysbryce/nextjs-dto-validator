name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version-type:
        description: "Version bump type"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major
          - prerelease
      release-notes:
        description: "Custom release notes (optional)"
        required: false
        type: string

jobs:
  manual-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          registry-url: "https://registry.npmjs.org"

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build package
        run: npm run build

      - name: Bump version
        id: version
        run: |
          OLD_VERSION=$(node -p "require('./package.json').version")
          npm version ${{ github.event.inputs.version-type }} --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")

          echo "old-version=$OLD_VERSION" >> $GITHUB_OUTPUT
          echo "new-version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Create release archive
        run: |
          VERSION=${{ steps.version.outputs.new-version }}
          ARCHIVE_NAME="nextjs-dto-validator-$VERSION.zip"

          mkdir -p release-temp
          rsync -av --exclude='node_modules' \
                   --exclude='.git' \
                   --exclude='release-temp' \
                   --exclude='*.zip' \
                   . release-temp/

          cd release-temp
          zip -r "../$ARCHIVE_NAME" .
          cd ..

          echo "ARCHIVE_NAME=$ARCHIVE_NAME" >> $GITHUB_ENV
          echo "ARCHIVE_PATH=$(pwd)/$ARCHIVE_NAME" >> $GITHUB_ENV

      - name: Generate release notes
        run: |
          VERSION=${{ steps.version.outputs.new-version }}

          if [ -n "${{ github.event.inputs.release-notes }}" ]; then
            echo "${{ github.event.inputs.release-notes }}" > RELEASE_NOTES.md
            echo "" >> RELEASE_NOTES.md
          else
            echo "## 🚀 Release v$VERSION" > RELEASE_NOTES.md
            echo "" >> RELEASE_NOTES.md
          fi

          echo "### 📝 Recent Changes:" >> RELEASE_NOTES.md
          git log --pretty="- %s (%h)" --no-merges -5 >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "### 📦 Installation" >> RELEASE_NOTES.md
          echo "\`\`\`bash" >> RELEASE_NOTES.md
          echo "npm install nextjs-dto-validator@$VERSION" >> RELEASE_NOTES.md
          echo "\`\`\`" >> RELEASE_NOTES.md

      - name: Commit and push
        run: |
          git add package.json package-lock.json
          git commit -m "chore: release v${{ steps.version.outputs.new-version }}"
          git tag "v${{ steps.version.outputs.new-version }}"
          git push origin main
          git push origin "v${{ steps.version.outputs.new-version }}"

      - name: Create GitHub Release
        id: create-release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version.outputs.new-version }}
          name: "🚀 Release v${{ steps.version.outputs.new-version }}"
          body_path: RELEASE_NOTES.md
          files: ${{ env.ARCHIVE_PATH }}
          draft: false
          prerelease: ${{ github.event.inputs.version-type == 'prerelease' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
